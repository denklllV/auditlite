# src/main.py
# –ò–º—è —Ñ–∞–π–ª–∞: src/main.py

import sys
import os
import io
from pathlib import Path
from dotenv import load_dotenv
from googleapiclient.http import MediaIoBaseDownload

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π –∏ –∏–º–ø–æ—Ä—Ç–æ–≤ ---
project_root = Path(__file__).resolve().parent.parent
sys.path.append(str(project_root))

from src.utils.google_clients import get_google_clients
# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à –ø–∞—Ä—Å–µ—Ä, –æ–Ω —Å–∫–æ—Ä–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è
from src.parsers.pdf_parser import extract_text_from_pdf

# --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
load_dotenv()
SHEET_NAME = os.getenv("SHEET_NAME")
SHEET_WORKSHEET_NAME = os.getenv("SHEET_WORKSHEET_NAME")

# --- –ù–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ---

def download_file_from_drive(drive_service: "Resource", file_id: str, save_path: Path) -> bool:
    """
    –°–∫–∞—á–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –∏–∑ Google Drive –ø–æ –µ–≥–æ ID –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ.
    """
    try:
        print(f"‚¨áÔ∏è  –ù–∞—á–∏–Ω–∞—é —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å ID: {file_id}")
        request = drive_service.files().get_media(fileId=file_id)
        
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        save_path.parent.mkdir(parents=True, exist_ok=True)
        
        fh = io.FileIO(save_path, 'wb')
        downloader = MediaIoBaseDownload(fh, request)
        
        done = False
        while not done:
            status, done = downloader.next_chunk()
            print(f"  > –ü—Ä–æ–≥—Ä–µ—Å—Å —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {int(status.progress() * 100)}%")
            
        print(f"‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤: {save_path}")
        return True
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
        return False

def update_task_status(worksheet: "gspread.Worksheet", row_index: int, new_status: str):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á–∏ –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–π —Å—Ç—Ä–æ–∫–µ.
    """
    try:
        # –ù–∞—Ö–æ–¥–∏–º –Ω—É–∂–Ω—É—é –∫–æ–ª–æ–Ω–∫—É –ø–æ –∏–º–µ–Ω–∏ 'Status'
        status_col = worksheet.find('Status').col
        worksheet.update_cell(row_index, status_col, new_status)
        print(f"üîÑ –°—Ç–∞—Ç—É—Å –≤ —Å—Ç—Ä–æ–∫–µ {row_index} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ '{new_status}'")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞: {e}")

def find_next_task(worksheet: "gspread.Worksheet") -> dict | None:
    """
    –ù–∞—Ö–æ–¥–∏—Ç –ø–µ—Ä–≤—É—é —Å—Ç—Ä–æ–∫—É —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'new' –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–µ –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—å.
    """
    all_records = worksheet.get_all_records()
    for index, row in enumerate(all_records):
        if row.get("Status") == 'new':
            row['row_index'] = index + 2
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ –Ω–æ–≤–∞—è –∑–∞–¥–∞—á–∞ –≤ —Å—Ç—Ä–æ–∫–µ {row['row_index']}: {row}")
            return row
    print("‚ÑπÔ∏è –ù–æ–≤—ã—Ö –∑–∞–¥–∞—á —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'new' –Ω–µ –Ω–∞–π–¥–µ–Ω–æ.")
    return None

def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è-–æ—Ä–∫–µ—Å—Ç—Ä–∞—Ç–æ—Ä.
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ AuditLite Python Worker...")
    
    try:
        gs_client, drive_service = get_google_clients()
        spreadsheet = gs_client.open(SHEET_NAME)
        worksheet = spreadsheet.worksheet(SHEET_WORKSHEET_NAME)
        
        task = find_next_task(worksheet)
        
        if not task:
            print("üèÅ –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            return

        # --- –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê ---
        
        row_idx = task['row_index']
        file_id = task.get('FileID')
        
        if not file_id:
            print(f"‚ùå –í –∑–∞–¥–∞—á–µ (—Å—Ç—Ä–æ–∫–∞ {row_idx}) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç FileID. –ü—Ä–æ–ø—É—Å–∫–∞—é.")
            update_task_status(worksheet, row_idx, 'error_no_file_id')
            return

        # 1. –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å, —á—Ç–æ–±—ã –¥—Ä—É–≥–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –Ω–µ –≤–∑—è–ª–∏ —ç—Ç—É –∑–∞–¥–∞—á—É
        update_task_status(worksheet, row_idx, 'processing')

        # 2. –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª
        file_name = task.get('FileName', f"{file_id}.pdf") # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–ª–∏ ID
        local_pdf_path = project_root / 'data' / 'artifacts' / file_name
        
        download_successful = download_file_from_drive(drive_service, file_id, local_pdf_path)

        if not download_successful:
            update_task_status(worksheet, row_idx, 'error_download_failed')
            return
            
        # 3. TODO: –í—ã–∑–≤–∞—Ç—å –ø–∞—Ä—Å–µ—Ä (—Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥)
        print(f"‰∏ã‰∏ÄÊ≠•: –í—ã–∑–≤–∞—Ç—å –ø–∞—Ä—Å–µ—Ä –¥–ª—è —Ñ–∞–π–ª–∞ {local_pdf_path}")
        
        # 4. –§–∏–Ω–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞
        update_task_status(worksheet, row_idx, 'processed_text_extracted') # –í—Ä–µ–º–µ–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å
        
    except Exception as e:
        print(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()

# –ö–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞: src/main.py